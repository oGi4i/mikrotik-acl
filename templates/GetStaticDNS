do {
    :local newStaticDNS {"#(.Name)#"={"address"=#(.Address)#;#(if .Regexp)# "regexp"="#(.Regexp)#";#(end)##(if .TTL)# "ttl"=#(.TTL)#;#(end)# "disabled"=#(.Disabled)#;#(if .Comment)# "comment"="#(.Comment)#";#(end)# "exists"=false}}
    :local listOfEntries ({})

    :foreach k,entry in=$newStaticDNS do={
        :set listOfEntries [:toarray ($listOfEntries . "," . $k)]
        :foreach e in=[/ip dns static find dynamic=no] do={
            :if ([/ip dns static get $e name] = $k) do={
                :local oldEntry [/ip dns static get $e]
                :set ($v->"exists") true
                :if (($oldEntry->"address") != ($entry->"address")) do={
                    /ip static dns set $e address=($entry->"address")
                    :log info ("Changed address for static DNS entry: \"" . $k . "\" from: \"" . ($oldEntry->"address") . "\" to: \"" . ($entry->"address") . "\"")
                }
                :if (($oldEntry->"regexp") != ($entry->"regexp")) do={
                    /ip static dns set $e regexp=($entry->"regexp")
                    :log info ("Changed regexp for static DNS entry: \"" . $k . "\" from: \"" . ($oldEntry->"regexp") . "\" to: \"" . ($entry->"regexp") . "\"")
                }
                :if (($oldEntry->"ttl") != ($entry->"ttl")) do={
                    /ip static dns set $e ttl=($entry->"ttl")
                    :log info ("Changed TTL for static DNS entry: \"" . $k . "\" from: \"" . ($oldEntry->"ttl") . "\" to: \"" . ($entry->"ttl") . "\"")
                }
                :if (($oldEntry->"comment") != ($entry->"comment")) do={
                    /ip static dns set $e comment=($entry->"comment")
                    :log info ("Changed comment for static DNS entry: \"" . $k . "\" from: \"" . ($oldEntry->"comment") . "\" to: \"" . ($entry->"comment") . "\"")
                }
                :if ([/ip dns static get $e disabled] != ($v->"disabled")) do={
                    :if (($v->"disabled") = false) do={
                        /ip dns static enable $e
                        :log info ("Enabled static DNS entry: " . $k . " with address: " . ($entry->"address"))
                    } else={
                        /ip static dns disable $e
                        :log info ("Disabled static DNS entry: " . $k . " with address: " . ($entry->"address"))
                    }
                }
            }
        }
    }

    :foreach k,entry in=$newStaticDNS do={
        :if (($v->"exists") = false) do={
            :local d
            :if (($entry->"disabled") = false) do={
                :set $d "no"
            } else={
                :set $d "yes"
            }
            /ip static dns add name=$k address=($entry->"address") regexp=($entry->"regexp") ttl=($entry->"ttl") disabled=$d comment=($entry->"comment")
            :log info ("Added new static DNS entry: \"" . $k . "\", address: " . ($entry->"address") . "\", regexp: " . ($entry->"regexp") . "\", enabled: " . !($entry->"disabled") . ", comment: \"" . ($entry->"comment") . "\"")
        }
    }
    :foreach l in=$listOfEntries do={
        :foreach e in=[/ip dns static find dynamic=no] do={
            :local name [/ip dns static get $e name]
            :if ([:typeof ($newStaticDNS->$l->$address)] != [:typeof ({})]) do={
                /ip dns static remove $e
                :log info ("Removed old static DNS entry: " . $name)
            }
        }
    }
} on-error={
    :log error "Error while executing UpdateStaticDNS script"
}